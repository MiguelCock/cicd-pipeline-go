# Identificación del proyecto
sonar.projectKey=MiguelCock_cicd-pipeline-go
sonar.organization=miguelcock

# Código fuente
sonar.sources=.
sonar.exclusions=**/vendor/**,**/mock/**

# Tests
sonar.tests=.
sonar.test.inclusions=**/*_test.go
sonar.test.exclusions=**/vendor/**

# Reportes de análisis estático (golangci-lint)
# Para generarlos: golangci-lint run --out-format checkstyle > golangci-lint-report.xml
sonar.go.golangci-lint.reportPaths=golangci-lint-report.xml

# Cobertura (unit tests)
# Generado con: go test -coverprofile=coverage.out ./...
sonar.go.coverage.reportPaths=coverage.xml

# Tests de aceptación (Mocha en formato JUnit)
# Generado con: npx mocha ./tests/selenium/... --reporter mocha-junit-reporter --reporter-options mochaFile=acceptance-report.xml
sonar.junit.reportPaths=./tests/selenium/acceptance-report.xml

# Opcional: umbral de cobertura mínimo
# sonar.go.coverage.minimumCoverage=80

# Esperar a Quality Gate
sonar.qualitygate.wait=true
sonar.qualitygate.timeout=300
